# Catch non-ssl domain requests
server {
  listen 80;
  listen [::]:80;
  server_name schandillia.com www.schandillia.com;
  return 301 https://www.$server_name$request_uri;
}

# Catch non-www domain requests on ssl
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name  schandillia.com;
  return 301 https://www.$server_name$request_uri;
}

# Settings for TLS enabled server (www/ssl requests)
server {
  listen 443 default_server ssl http2;
  listen [::]:443 ssl http2;
  server_name  www.schandillia.com;

  # Retrieve certificates
  ssl_certificate "/etc/letsencrypt/live/schandillia.com/fullchain.pem";
  ssl_certificate_key "/etc/letsencrypt/live/schandillia.com/privkey.pem";

  # Automatically route HTTP to HTTPS
  add_header Strict-Transport-Security "max-age=31536000";

  include /etc/nginx/default.d/*.conf;
  root /usr/share/nginx/html;
  index index.html index.htm;

  proxy_hide_header X-Powered-By;
  add_header X-Powered-By "Project Proost 0.0.0";
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  location / {
    proxy_pass http://127.0.0.1:3000;
    charset UTF-8;
    proxy_http_version 1.1;
  }
  location ~* \.(?:ico|svg|woff|woff2|ttf|otf|css|js|gif|jpe?g|png)$ {
   proxy_pass http://127.0.0.1:3000;
   expires 365d;
   add_header Pragma public;
   add_header Cache-Control "public";
  }
}

# for subdomain graph
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name graph.schandillia.com;

  # Route for /
  location / {
    proxy_pass http://127.0.0.1:9001;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  # Route for /blog
  location /blog {
    proxy_pass http://127.0.0.1:9000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }
}
